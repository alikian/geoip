# Welcome to Serverless!
#

service: geoip

provider:
  name: aws
  runtime: python3.7
  region: us-west-2
  stage: ${opt:stage, 'dev'}
  tracing:
    apiGateway: true
    lambda: true

plugins:
  - serverless-pseudo-parameters
  - serverless-python-requirements
  - serverless-iam-roles-per-function

functions:
  lookup:
    handler: lookup.find
    events:
      - http:
          path: ip/{ip}
          method: get
      - http:
          path: ip
          method: get
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - 'dynamodb:DescribeTable'
          - 'dynamodb:GetItem'
          - 'dynamodb:BatchGetItem'
          - 'dynamodb:Query'
        Resource:
          - arn:aws:dynamodb:us-west-2:#{AWS::AccountId}:table/geoip_city*
  lookup_dax:
    handler: lookup_dax.find
    events:
      - http:
          path: ip_dax/{ip}
          method: get
      - http:
          path: ip_dax
          method: get
    vpc:
      securityGroupIds:
        - sg-1ea8316c
      subnetIds:
        - subnet-addf82d4
        - subnet-e07f01ab
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - 'dax:GetItem'
          - 'dax:BatchGetItem'
          - 'dax:Query'
          - 'dax:Scan'
          - 'dax:DefineAttributeList'
          - 'dax:DefineAttributeListId'
          - 'dax:DefineKeySchema'
          - 'dax:Endpoints'
        Resource:
            - arn:aws:dax:us-west-2:#{AWS::AccountId}:cache/*

resources:
  Resources:
    geoipCityLocations:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: geoip_city_locations_${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: geoname_id
            AttributeType: S
        KeySchema:
          - AttributeName: geoname_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1000
    geoipCityNlocksIp4:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: geoip_city_blocks_ip4_${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: network
            AttributeType: S
        KeySchema:
          - AttributeName: network
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1000
    DaxIamRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service.name}dax
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "dax.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          - PolicyName: "${self:service.name}-dax"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - dynamodb:Query
                    - dynamodb:Scan
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:UpdateItem
                    - dynamodb:DescribeTable
                  Resource:
                    - arn:aws:dynamodb:us-west-2:#{AWS::AccountId}:table/geoip_city*